{
  "source": {
    "hash": "0xbdb6d036889c2be1d597be7d48b4a91774c28bcb34e8981455c9c61dbdc9a516",
    "language": "ink! 5.0.0",
    "compiler": "rustc 1.77.2",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "4.1.1",
      "rust_toolchain": "stable-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "register_assets_proposal",
    "version": "0.1.0",
    "authors": [
      ""
    ]
  },
  "image": "paritytech/contracts-verifiable:4.1.1",
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "lending_pool",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "label": "a_token_code_hash",
            "type": {
              "displayName": [],
              "type": 2
            }
          },
          {
            "label": "v_token_code_hash",
            "type": {
              "displayName": [],
              "type": 2
            }
          },
          {
            "label": "usdt_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "label": "usdc_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "label": "weth_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "label": "wbtc_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "label": "wazero_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 4
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 1
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 18
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 13
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 36
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 35
      },
      "maxEventTopics": 4,
      "staticBufferSize": 16384,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 15
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "on_behalf_of",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when a deposit of 'amount' in 'asset' is made by 'caller' on behalf of 'on_behalf_of'.",
          "The data coresponding to asset and (asset, on_behalf_of) is updated (interests are accumulated)."
        ],
        "label": "Deposit",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x0fec3602811bce8ef519cedac639ad86e69ab2aec83956f393e7a7b1d59e27bc"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "on_behalf_of",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when a withdraw of 'amount' in 'asset' is made by 'caller' on behalf of 'on_behalf_of'.",
          "The data coresponding to asset and (asset, on_behalf_of) is updated (interests are accumulated)."
        ],
        "label": "Withdraw",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x9501416456eb96ab1e14aef68d4f7eb0d957c7c3a2c723f943ab3308429f4857"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "market_rule_id",
            "type": {
              "displayName": [
                "RuleId"
              ],
              "type": 13
            }
          }
        ],
        "docs": [
          "Emitted when a market rule is chosen."
        ],
        "label": "MarketRuleChosen",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0xc2f67a85fec07505f0a22d06212c1ba689ed73ba02ac2d8983e8b25dc5ffd889"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "set",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 33
            }
          }
        ],
        "docs": [
          "Emitted when an `asset` is enabled or disabled as collateral by the `caller`."
        ],
        "label": "CollateralSet",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x7406c0f2277b86f664d896a0104f866543c82958809fb0ccfa10c44d2babac1b"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "on_behalf_of",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when a borrow of 'amount' in 'asset' is made by 'caller' on behalf of 'on_behalf_of'.",
          "The data coresponding to asset and (asset, on_behalf_of) is updated (interests are accumulated)."
        ],
        "label": "Borrow",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x68b9109b885e8a8edf4f3944e10c50bb2fc2148a57d290d552c994f93e86c384"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "on_behalf_of",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when a repay of 'amount' in 'asset' is made by 'caller' on behalf of 'on_behalf_of'.",
          "The data coresponding to asset and (asset, on_behalf_of) is updated (interests are accumulated)."
        ],
        "label": "Repay",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0xcb7684ef3f1c086b7fce47dd8911c325780102a9aec8be9cd4e65db62aa795e4"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "receiver",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 18
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "fee",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when a flash loan of `amount` in `asset` is initiated by `caller` to the `receiver`.",
          "The receiver pays back the `amount` and `fee` in the same transaction."
        ],
        "label": "FlashLoan",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x4a0f52b5eeff44e7c1be269a52410bb70377ac9d6747005cbdf7fd9245eac878"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "liquidator",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "liquidated_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "asset_to_repay",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "asset_to_take",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount_repaid",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount_taken",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when a liquidation is made by 'liquidator' on 'liquidated_account'.",
          "The liquidator takes 'amount_taken' of 'asset_to_take' and repays 'amount_repaid' of 'asset_to_repay'.",
          "",
          "# Note",
          "The data coresponding to asset_to_take, amount_repaid",
          "and (asset_to_repay, liquidated_account)",
          "and (asset_to_take, liquidator) and (asset_to_take, liquidated_account) is updated (interests are accumulated)."
        ],
        "label": "Liquidation",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x76ba462a55808954755f62e0d6e94466af36b39ef9edb4bea8d9e83bd72c38e6"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when a interest indexes are updated in reserve coreespoding to asset.",
          "",
          "# Note",
          "This event is not emitted when Deposit, Withdraw, Borrow, Repay, Liquidation events are emitted eventhougth the interest indexes are updated."
        ],
        "label": "InterestsAccumulated",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x9768a96ba816d5c186373d34d7571df094f74c6cecd38c6f06d35f9678a50ac0"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "decimals",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 25
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "symbol",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 25
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "a_token_code_hash",
            "type": {
              "displayName": [],
              "type": 2
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "v_token_code_hash",
            "type": {
              "displayName": [],
              "type": 2
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "a_token_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "v_token_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when an asset is registered."
        ],
        "label": "AssetRegistered",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0xdfdfdad540d764eb76ee8217018a03f6350f2c1a122ef93252371103d4f6b580"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "price_feed_provider",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when a price feed provider is changed."
        ],
        "label": "PriceFeedProviderChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x43f92bb52801afce6a6190a96b5ef40283fce331461dcb6ca0811ab14da05751"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "fee_reduction_provider",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when a fee reduction provider is changed."
        ],
        "label": "FeeReductionChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x0f1163fa6f83624da54bab4b3bc63527e9332d8694fd8f21edb4db3f562886a3"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "flash_loan_fee_e6",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when a flash loan fee is changed."
        ],
        "label": "FlashLoanFeeChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x7ae8c2bb5c69af2484d1217a620b4f0ade84e5a0d2c6857501f71dd974a82ba4"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "active",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 33
            }
          }
        ],
        "docs": [
          "Emitted when a reserve is activated."
        ],
        "label": "ReserveActivated",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x8293e9a17d04a3b9d2ed8bfdeef09bafd31239028a6f5fa6d7b45262e8b1cad9"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "frozen",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 33
            }
          }
        ],
        "docs": [
          "Emitted when a reserve is frozen."
        ],
        "label": "ReserveFrozen",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x1ee11acc50b9c7c436cb8106f806cf35faf5067f048a3069866862f79181ee9e"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "interest_rate_model_params",
            "type": {
              "displayName": [
                "InterestRateModelParams"
              ],
              "type": 14
            }
          }
        ],
        "docs": [
          "Emitted when a interest rate model is changed."
        ],
        "label": "ReserveInterestRateModelChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0xb62ddd071d599731e66a725322b7529cb31ceeeaab0c94d9072f9d4926e95489"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "reserve_restrictions",
            "type": {
              "displayName": [
                "ReserveRestrictions"
              ],
              "type": 19
            }
          }
        ],
        "docs": [
          "Emitted when a reserve restrictions are changed."
        ],
        "label": "ReserveRestrictionsChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0xcb01d574ecfb3a85c06261a438bfceb4eb22b1e7e337994e63e857df2e003d0b"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "reserve_fees",
            "type": {
              "displayName": [
                "SetReserveFeesArgs"
              ],
              "type": 12
            }
          }
        ],
        "docs": [
          "Emitted when a reserve fees are changed."
        ],
        "label": "ReserveFeesChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x846d17a1ea55292cbbd707fac313f6d1c807c7c3653c3b56858e913a6668f065"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "market_rule_id",
            "type": {
              "displayName": [
                "RuleId"
              ],
              "type": 13
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "collateral_coefficient_e6",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 17
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "borrow_coefficient_e6",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 17
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "penalty_e6",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 17
            }
          }
        ],
        "docs": [
          "Emitted when an asset rules in an martket rule are changed."
        ],
        "label": "AssetRulesChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x10dca875b9227d850bd11cb568b83b87cc968c08054efd454dcf3363a8dfb388"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when a protocol income genareted in 'asset' is taken."
        ],
        "label": "IncomeTaken",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0xa7766c3f17f457a0b8d61ed60e6e42c15783cdd5e741c7540e788ffddadf4ed0"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "asset",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "debt_rate_e18",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 15
            }
          }
        ],
        "docs": [
          "Emitted when stablecoin debt rate is changed."
        ],
        "label": "StablecoinDebtRateChanged",
        "module_path": "abax_contracts::lending_pool::events",
        "signature_topic": "0x4fde6d40bee7fd565c8e00072d605f588ed45a773a363365b8a433f641e54785"
      },
      {
        "args": [
          {
            "docs": [
              "The account from which the tokens are transferred. `None` for minting operations."
            ],
            "indexed": true,
            "label": "from",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 34
            }
          },
          {
            "docs": [
              "The account to which the tokens are transferred. `None` for burning operations."
            ],
            "indexed": true,
            "label": "to",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 34
            }
          },
          {
            "docs": [
              "The amount of tokens transferred."
            ],
            "indexed": false,
            "label": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when tokens are transferred, including zero value transfers."
        ],
        "label": "Transfer",
        "module_path": "pendzl_contracts::token::psp22",
        "signature_topic": "0xb5b61a3e6a21a16be4f044b517c28ac692492f73c5bfd3f60178ad98c767f4cb"
      },
      {
        "args": [
          {
            "docs": [
              "The account of the token owner."
            ],
            "indexed": true,
            "label": "owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [
              "The account of the authorized spender."
            ],
            "indexed": true,
            "label": "spender",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "docs": [
              "The new allowance amount."
            ],
            "indexed": false,
            "label": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          "Emitted when the allowance of a `spender` for an `owner` is set or changed."
        ],
        "label": "Approval",
        "module_path": "pendzl_contracts::token::psp22",
        "signature_topic": "0x1a35e726f5feffda199144f6097b2ba23713e549bfcbe090c0981e3bcdfbcc1d"
      },
      {
        "args": [
          {
            "docs": [
              "The account that initiated the pause action."
            ],
            "indexed": true,
            "label": "account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when the contract is paused."
        ],
        "label": "Paused",
        "module_path": "pendzl_contracts::security::pausable",
        "signature_topic": "0xcb560a184d13b48ac1ecc804d19fa57a64ef4facd0819dcac22a969c20fec081"
      },
      {
        "args": [
          {
            "docs": [
              "The account that initiated the unpause action."
            ],
            "indexed": true,
            "label": "account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when the contract is unpaused."
        ],
        "label": "Unpaused",
        "module_path": "pendzl_contracts::security::pausable",
        "signature_topic": "0x29f037cd7cf467977af6c1d02a3c4ab9c868bb6ce539c0d87ea507d594709d41"
      },
      {
        "args": [
          {
            "docs": [
              "The new owner's account address. `None` if ownership is renounced."
            ],
            "indexed": true,
            "label": "new",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 34
            }
          }
        ],
        "docs": [
          "Emitted when ownership of the contract is transferred."
        ],
        "label": "OwnershipTransferred",
        "module_path": "pendzl_contracts::access::ownable",
        "signature_topic": "0x5c626481ee232181dcfad24632520cc98608b23ed971378c0ad4504cab1b78c9"
      },
      {
        "args": [
          {
            "docs": [
              "The `RoleType` for which the admin role is changed. This is the role being modified."
            ],
            "indexed": true,
            "label": "role",
            "type": {
              "displayName": [
                "RoleType"
              ],
              "type": 13
            }
          },
          {
            "docs": [
              "The `RoleType` representing the previous admin role for the `role`. Indicates the admin role before the change."
            ],
            "indexed": false,
            "label": "previous",
            "type": {
              "displayName": [
                "RoleType"
              ],
              "type": 13
            }
          },
          {
            "docs": [
              "The `RoleType` representing the new admin role set for the `role`. Indicates the updated admin role."
            ],
            "indexed": false,
            "label": "new",
            "type": {
              "displayName": [
                "RoleType"
              ],
              "type": 13
            }
          }
        ],
        "docs": [
          "Emitted when the admin role for a specific role is changed.",
          "",
          "This event is triggered whenever a `role`'s admin role is updated.",
          "It logs the `role` being modified, the `previous` admin role, and the `new` admin role set for that `role`."
        ],
        "label": "RoleAdminChanged",
        "module_path": "pendzl_contracts::access::access_control",
        "signature_topic": "0xde670cace683976bfdc92b54b661961802f8322e8cead41fd76e5d7ca65dc403"
      },
      {
        "args": [
          {
            "docs": [
              "The `RoleType` that is granted. This field identifies the specific role being assigned."
            ],
            "indexed": true,
            "label": "role",
            "type": {
              "displayName": [
                "RoleType"
              ],
              "type": 13
            }
          },
          {
            "docs": [
              "The `AccountId` of the account receiving the `role`. Represents the beneficiary of the role assignment."
            ],
            "indexed": true,
            "label": "grantee",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 34
            }
          },
          {
            "docs": [
              "The `AccountId` of the account that granted the `role`. This is the account responsible for the role assignment."
            ],
            "indexed": true,
            "label": "grantor",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 34
            }
          }
        ],
        "docs": [
          "Emitted when a role is granted to an account.",
          "",
          "This event occurs when a new `role` is assigned to an `grantee`.",
          "The `grantor` who assigned the role is also logged."
        ],
        "label": "RoleGranted",
        "module_path": "pendzl_contracts::access::access_control",
        "signature_topic": "0x4178b665aa7310f609a3da6698348eabe212f3b0bd0386791eeae4924095b76b"
      },
      {
        "args": [
          {
            "docs": [
              "The `RoleType` that is revoked. Specifies the role being removed from the account."
            ],
            "indexed": true,
            "label": "role",
            "type": {
              "displayName": [
                "RoleType"
              ],
              "type": 13
            }
          },
          {
            "docs": [
              "The `AccountId` of the account from which the `role` is being removed. Denotes the account losing the role."
            ],
            "indexed": true,
            "label": "account",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 34
            }
          },
          {
            "docs": [
              "The `AccountId` of the account that performed the role revocation. Indicates who initiated the removal of the role."
            ],
            "indexed": true,
            "label": "sender",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Emitted when a role is revoked from an account.",
          "",
          "This event is triggered when an existing `role` is removed from an `account`.",
          "The `sender` who performed the revocation is also included."
        ],
        "label": "RoleRevoked",
        "module_path": "pendzl_contracts::access::access_control",
        "signature_topic": "0x00d57dbcb9a54f822039e86efe3513a9af40deb0e6a9ee6cecf39824f8d27e9b"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 6
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "view_execute_action_counter",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 7
        },
        "selector": "0xdc1accb1"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "view_params",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 8
        },
        "selector": "0xfaa78604"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "view_usdt_token_data",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xf02d300d"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "view_usdc_token_data",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x28a9d95e"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "view_weth_token_data",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xc22ce573"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "view_wbtc_token_data",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xd4714351"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "view_wazero_token_data",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xe3843568"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "execute",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 20
        },
        "selector": "0xd00ec894"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "execute_action_counter"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 1
                        }
                      },
                      "name": "account_id"
                    }
                  ],
                  "name": "__ink_TraitCallBuilderLendingPoolManage"
                }
              },
              "name": "lending_pool"
            },
            {
              "layout": {
                "array": {
                  "layout": {
                    "leaf": {
                      "key": "0x00000000",
                      "ty": 0
                    }
                  },
                  "len": 32,
                  "offset": "0x00000000"
                }
              },
              "name": "a_token_code_hash"
            },
            {
              "layout": {
                "array": {
                  "layout": {
                    "leaf": {
                      "key": "0x00000000",
                      "ty": 0
                    }
                  },
                  "len": 32,
                  "offset": "0x00000000"
                }
              },
              "name": "v_token_code_hash"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 1
                }
              },
              "name": "usdt_address"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 1
                }
              },
              "name": "usdc_address"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 1
                }
              },
              "name": "weth_address"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 1
                }
              },
              "name": "wbtc_address"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 1
                }
              },
              "name": "wazero_address"
            }
          ],
          "name": "Proposal"
        }
      },
      "root_key": "0x00000000",
      "ty": 3
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 2,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 0
          }
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "execute_action_counter",
                "type": 0,
                "typeName": "<u8 as::ink::storage::traits::AutoStorableHint<::ink::storage::\ntraits::ManualKey<1961223577u32, ()>,>>::Type"
              },
              {
                "name": "lending_pool",
                "type": 1,
                "typeName": "<LendingPoolManageRef as::ink::storage::traits::AutoStorableHint<::\nink::storage::traits::ManualKey<1060019226u32, ()>,>>::Type"
              },
              {
                "name": "a_token_code_hash",
                "type": 2,
                "typeName": "<[u8; 32] as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<2231863144u32, ()>,>>::Type"
              },
              {
                "name": "v_token_code_hash",
                "type": 2,
                "typeName": "<[u8; 32] as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<102268081u32, ()>,>>::Type"
              },
              {
                "name": "usdt_address",
                "type": 1,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<1161483661u32, ()>,>>::Type"
              },
              {
                "name": "usdc_address",
                "type": 1,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<2635374694u32, ()>,>>::Type"
              },
              {
                "name": "weth_address",
                "type": 1,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<1169812600u32, ()>,>>::Type"
              },
              {
                "name": "wbtc_address",
                "type": 1,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<1394579974u32, ()>,>>::Type"
              },
              {
                "name": "wazero_address",
                "type": 1,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<1716336172u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": [
          "register_assets_proposal",
          "register_assets_proposal",
          "Proposal"
        ]
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 9
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "lending_pool",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "a_token_code_hash",
                "type": 2,
                "typeName": "[u8; 32]"
              },
              {
                "name": "v_token_code_hash",
                "type": 2,
                "typeName": "[u8; 32]"
              },
              {
                "name": "usdt_address",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "usdc_address",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "weth_address",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "wbtc_address",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "wazero_address",
                "type": 1,
                "typeName": "AccountId"
              }
            ]
          }
        },
        "path": [
          "register_assets_proposal",
          "register_assets_proposal",
          "ViewParams"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 11
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "address",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "fees",
                "type": 12,
                "typeName": "SetReserveFeesArgs"
              },
              {
                "name": "interest_rate_model_params",
                "type": 14,
                "typeName": "InterestRateModelParams"
              },
              {
                "name": "default_rule",
                "type": 16,
                "typeName": "AssetRules"
              },
              {
                "name": "restrictions",
                "type": 19,
                "typeName": "ReserveRestrictions"
              }
            ]
          }
        },
        "path": [
          "register_assets_proposal",
          "register_assets_proposal",
          "TokenRegistrationData"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "debt_fee_e6",
                "type": 13,
                "typeName": "u32"
              },
              {
                "name": "deposit_fee_e6",
                "type": 13,
                "typeName": "u32"
              }
            ]
          }
        },
        "path": [
          "abax_contracts",
          "lending_pool",
          "traits",
          "lending_pool_manage",
          "SetReserveFeesArgs"
        ]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "target_ur_e6",
                "type": 13,
                "typeName": "u32"
              },
              {
                "name": "min_rate_at_target_e18",
                "type": 15,
                "typeName": "u64"
              },
              {
                "name": "max_rate_at_target_e18",
                "type": 15,
                "typeName": "u64"
              },
              {
                "name": "rate_at_max_ur_e18",
                "type": 15,
                "typeName": "u64"
              },
              {
                "name": "minimal_time_between_adjustments",
                "type": 15,
                "typeName": "u64"
              }
            ]
          }
        },
        "path": [
          "abax_library",
          "structs",
          "interest_rate_model",
          "InterestRateModelParams"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "collateral_coefficient_e6",
                "type": 17,
                "typeName": "Option<u128>"
              },
              {
                "name": "borrow_coefficient_e6",
                "type": 17,
                "typeName": "Option<u128>"
              },
              {
                "name": "penalty_e6",
                "type": 17,
                "typeName": "Option<u128>"
              }
            ]
          }
        },
        "path": [
          "abax_library",
          "structs",
          "asset_rules",
          "AssetRules"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 18
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "maximal_total_deposit",
                "type": 17,
                "typeName": "Option<Balance>"
              },
              {
                "name": "maximal_total_debt",
                "type": 17,
                "typeName": "Option<Balance>"
              },
              {
                "name": "minimal_collateral",
                "type": 18,
                "typeName": "Balance"
              },
              {
                "name": "minimal_debt",
                "type": 18,
                "typeName": "Balance"
              }
            ]
          }
        },
        "path": [
          "abax_library",
          "structs",
          "reserve_restrictions",
          "ReserveRestrictions"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 21
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 21
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 22
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 22
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 23,
                    "typeName": "LendingPoolError"
                  }
                ],
                "index": 0,
                "name": "LendingPoolError"
              },
              {
                "fields": [
                  {
                    "type": 26,
                    "typeName": "pendzl::contracts::access_control::AccessControlError"
                  }
                ],
                "index": 1,
                "name": "AccessControlError"
              },
              {
                "index": 2,
                "name": "ProposalAlreadyExecuted"
              }
            ]
          }
        },
        "path": [
          "register_assets_proposal",
          "ProposalError"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 24,
                    "typeName": "PSP22Error"
                  }
                ],
                "index": 0,
                "name": "PSP22Error"
              },
              {
                "fields": [
                  {
                    "type": 26,
                    "typeName": "AccessControlError"
                  }
                ],
                "index": 1,
                "name": "AccessControlError"
              },
              {
                "fields": [
                  {
                    "type": 27,
                    "typeName": "MathError"
                  }
                ],
                "index": 2,
                "name": "MathError"
              },
              {
                "fields": [
                  {
                    "type": 28,
                    "typeName": "AssetRulesError"
                  }
                ],
                "index": 3,
                "name": "AssetRulesError"
              },
              {
                "fields": [
                  {
                    "type": 29,
                    "typeName": "ReserveDataError"
                  }
                ],
                "index": 4,
                "name": "ReserveDataError"
              },
              {
                "fields": [
                  {
                    "type": 30,
                    "typeName": "ReserveRestrictionsError"
                  }
                ],
                "index": 5,
                "name": "ReserveRestrictionsError"
              },
              {
                "fields": [
                  {
                    "type": 31,
                    "typeName": "PriceFeedError"
                  }
                ],
                "index": 6,
                "name": "PriceFeedError"
              },
              {
                "fields": [
                  {
                    "type": 32,
                    "typeName": "FlashLoanReceiverError"
                  }
                ],
                "index": 7,
                "name": "FlashLoanReceiverError"
              },
              {
                "index": 8,
                "name": "AmountNotGreaterThanZero"
              },
              {
                "index": 9,
                "name": "AlreadyRegistered"
              },
              {
                "index": 10,
                "name": "AssetNotRegistered"
              },
              {
                "index": 11,
                "name": "AssetIsProtocolStablecoin"
              },
              {
                "index": 12,
                "name": "AssetIsNotProtocolStablecoin"
              },
              {
                "index": 13,
                "name": "RuleBorrowDisable"
              },
              {
                "index": 14,
                "name": "RuleCollateralDisable"
              },
              {
                "index": 15,
                "name": "InsufficientCollateral"
              },
              {
                "index": 16,
                "name": "InsufficientDebt"
              },
              {
                "index": 17,
                "name": "Collaterized"
              },
              {
                "index": 18,
                "name": "InsufficientDeposit"
              },
              {
                "index": 19,
                "name": "MinimumRecieved"
              },
              {
                "index": 20,
                "name": "NothingToRepay"
              },
              {
                "index": 21,
                "name": "NothingToCompensateWith"
              },
              {
                "index": 22,
                "name": "TakingNotACollateral"
              },
              {
                "index": 23,
                "name": "VectorsInconsistentLengths"
              },
              {
                "index": 24,
                "name": "MarketRuleInvalidId"
              },
              {
                "index": 25,
                "name": "DepositFeeTooHigh"
              },
              {
                "fields": [
                  {
                    "type": 0,
                    "typeName": "u8"
                  }
                ],
                "index": 26,
                "name": "TwEntryInvalidIndex"
              },
              {
                "index": 27,
                "name": "TooEarlyToAdjustRate"
              }
            ]
          }
        },
        "path": [
          "abax_contracts",
          "lending_pool",
          "errors",
          "LendingPoolError"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 25,
                    "typeName": "String"
                  }
                ],
                "index": 0,
                "name": "Custom"
              },
              {
                "index": 1,
                "name": "InsufficientBalance"
              },
              {
                "index": 2,
                "name": "InsufficientAllowance"
              },
              {
                "index": 3,
                "name": "ZeroRecipientAddress"
              },
              {
                "index": 4,
                "name": "ZeroSenderAddress"
              },
              {
                "fields": [
                  {
                    "type": 25,
                    "typeName": "String"
                  }
                ],
                "index": 5,
                "name": "SafeTransferCheckFailed"
              },
              {
                "index": 6,
                "name": "PermitInvalidSignature"
              },
              {
                "index": 7,
                "name": "PermitExpired"
              }
            ]
          }
        },
        "path": [
          "pendzl_contracts",
          "token",
          "psp22",
          "PSP22Error"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "InvalidCaller"
              },
              {
                "index": 1,
                "name": "MissingRole"
              },
              {
                "index": 2,
                "name": "RoleRedundant"
              }
            ]
          }
        },
        "path": [
          "pendzl_contracts",
          "access",
          "access_control",
          "AccessControlError"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Underflow"
              },
              {
                "index": 1,
                "name": "Overflow"
              },
              {
                "index": 2,
                "name": "DivByZero"
              }
            ]
          }
        },
        "path": [
          "pendzl_lang",
          "math",
          "errors",
          "MathError"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "InvalidAssetRule"
              }
            ]
          }
        },
        "path": [
          "abax_library",
          "structs",
          "asset_rules",
          "AssetRulesError"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "AlreadySet"
              },
              {
                "index": 1,
                "name": "Inactive"
              },
              {
                "index": 2,
                "name": "Frozen"
              }
            ]
          }
        },
        "path": [
          "abax_library",
          "structs",
          "reserve_data",
          "ReserveDataError"
        ]
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "MaxDebtReached"
              },
              {
                "index": 1,
                "name": "MaxDepositReached"
              },
              {
                "index": 2,
                "name": "MinimalDebt"
              },
              {
                "index": 3,
                "name": "MinimalCollateral"
              }
            ]
          }
        },
        "path": [
          "abax_library",
          "structs",
          "reserve_restrictions",
          "ReserveRestrictionsError"
        ]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "NoSuchAsset"
              },
              {
                "index": 1,
                "name": "NoPriceFeed"
              }
            ]
          }
        },
        "path": [
          "abax_contracts",
          "price_feed",
          "errors",
          "PriceFeedError"
        ]
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 27,
                    "typeName": "MathError"
                  }
                ],
                "index": 0,
                "name": "MathErorr"
              },
              {
                "fields": [
                  {
                    "type": 25,
                    "typeName": "String"
                  }
                ],
                "index": 1,
                "name": "Custom"
              }
            ]
          }
        },
        "path": [
          "abax_contracts",
          "flash_loan_receiver",
          "errors",
          "FlashLoanReceiverError"
        ]
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 2,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": 5
}